create or replace procedure GENERATE_INFILL_DATE(ics_audit_id adms_config.t_i_audit_process_runs.ics_audit_id%type) as
/*
Version history to contain:
Procedure name: GENERATE_DATE_INFILL
Date created: 02/09/2016
Current version 1-0
FRANCOIS FORD
History â€“ Date Amended, Amended By, Comment

*/
V_EXISTS number;
V_PROCESSID varchar2(32);
E_MISSING EXCEPTION;
E_ARCHIVE EXCEPTION;
NSCHEMA VARCHAR2(30) := 'WATERINF';
V_MSG VARCHAR2(500);
N_VALID1 PLS_INTEGER;
N_VALID2 PLS_INTEGER;
V_MODULE varchar2(100) := 'GENERATE_INFILL_DATE';
V_MODULE1 VARCHAR2(1000);
begin

V_PROCESSID := ADMS_CONFIG.pkg_adms_util.get_process_id(ics_audit_id);
--process_audit
v_module1 := 'STARTING';
ADMS_CONFIG.PKG_ADMS_UTIL.WRITE_TO_AUDIT_LOG(        NSCHEMA, V_PROCESSID,'PROCESS STARTED OK','START',NULL , sysdate, null,ics_audit_id);
if ADMS_CONFIG.PKG_ADMS_UTIL.CHECK_REQUIRED_OBJECTS_EXIST(NSCHEMA,V_PROCESSID) then
  RAISE E_MISSING;
end if;

IF NOT archive_data(ICS_AUDIT_ID,V_PROCESSID) THEN
  RAISE E_ARCHIVE;
END IF;



/*----------------------------------------------------------------------------------------------------------------------------------------------------
MAINS INSTALL INFILL 
RULES TAKEN FROM ESRI MODEL BUILDER PROVIDED BY THAMES (RICHARD TULL)
----------------------------------------------------------------------------------------------------------------------------------------------------*/

-- FIRST WE CLEAR OUT ANY OLD MATERIAL INFILL
DELETE FROM T_I_INFILL_DATE WHERE FIELD_NAME = 'MAINS_INSTALL' AND TABLE_NAME = 'T_I_MAINS';

commit;

-- COLLECT THE LIST OF MAINS WHERE THE INSTALL DATE IS MISSING
INSERT INTO T_I_INFILL_DATE (ICS_ID, TABLE_NAME, FIELD_NAME, INFILL_VALUE_1, INFILL_VALUE_1_SRC)
  select 
    T1.ICS_ASSET_ID ICS_ID, 'T_I_MAINS' TABLE_NAME, 'MAINS_INSTALL' FIELD_NAME,
     '',''
  FROM T_I_MAINS T1 
  LEFT JOIN WATERINF.T_I_MAINS_TWUL T2  ---THIS NEEDS TO COME FROM THE T_I_MAINS_TWUL TABLE
  ON T1.ICS_ASSET_ID = T2.ICS_ASSET_ID
  WHERE T1.DATE_INSTALL IS NULL;
  
 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- THE RENOVATIONDATE RULES 23773
ADMS_CONFIG.PKG_ADMS_UTIL.WRITE_TO_AUDIT_LOG(        NSCHEMA, V_PROCESSID,'RENOVATION DATE RULES STARTED','START',NULL , sysdate, null,ics_audit_id);
  UPDATE T_I_INFILL_DATE A
  SET (A.INFILL_VALUE_4, A.INFILL_VALUE_4_SRC) = 
(select 
   CASE 
        WHEN TO_DATE(RENOVATIONDATE, 'YYYYMMDD') > TO_DATE('16000101', 'YYYYMMDD') AND (RENOVATIONTYPE = 'CFL' OR RENOVATIONTYPE = 'SL') THEN TO_DATE(RENOVATIONDATE, 'YYYYMMDD')        
      END INFILL_VALUE_4,
   CASE 
        WHEN TO_DATE(RENOVATIONDATE, 'YYYYMMDD') > TO_DATE('16000101', 'YYYYMMDD') AND (RENOVATIONTYPE = 'CFL' OR RENOVATIONTYPE = 'SL') THEN  'TW RENOVATIONDATE RULES'        
      END INFILL_VALUE_4_SRC
  FROM T_I_MAINS T1 
  LEFT JOIN WATERINF.T_I_MAINS_TWUL T2  ---THIS NEEDS TO COME FROM THE T_I_MAINS_TWUL TABLE
  ON T1.ICS_ASSET_ID = T2.ICS_ASSET_ID
  WHERE T1.DATE_INSTALL IS NULL AND
  CASE 
        WHEN TO_DATE(RENOVATIONDATE, 'YYYYMMDD') > TO_DATE('16000101', 'YYYYMMDD') AND (RENOVATIONTYPE = 'CFL' OR RENOVATIONTYPE = 'SL') THEN TO_DATE(RENOVATIONDATE, 'YYYYMMDD')        
      END IS NOT NULL 
AND A.ICS_ID = T1.ICS_ASSET_ID
);
COMMIT;
ADMS_CONFIG.PKG_ADMS_UTIL.WRITE_TO_AUDIT_LOG(        NSCHEMA, V_PROCESSID,'RENOVATION DATE RULES COMPLETED','FINISH',NULL , sysdate, null,ics_audit_id);
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- DATEBUILT RULES
ADMS_CONFIG.PKG_ADMS_UTIL.WRITE_TO_AUDIT_LOG(        NSCHEMA, V_PROCESSID,'DATE BUILT RULES STARTED','START',NULL , sysdate, null,ics_audit_id);
UPDATE T_I_INFILL_DATE A SET (A.INFILL_VALUE_5, A.INFILL_VALUE_5_SRC) = 
(
  SELECT TO_DATE(T2.DATEBUILT)  INFILL_VALUE_5, 'TW DATEBUILT RULES' INFILL_VALUE_5_SRC --,T1.DATE_INSTALL
    FROM T_I_MAINS T1 
     LEFT JOIN WATERINF.T_I_MAINS_TWUL T2  ---THIS NEEDS TO COME FROM THE T_I_MAINS_TWUL TABLE
     ON T1.ICS_ASSET_ID = T2.ICS_ASSET_ID
   WHERE  TO_DATE(T2.DATEBUILT) > TO_DATE('16000101', 'YYYYMMDD')
   AND TO_DATE(T2.DATEBUILT)IS NOT NULL
   AND  T1.DATE_INSTALL IS NULL 
  AND A.ICS_ID = T1.ICS_ASSET_ID
 )
 WHERE A.INFILL_VALUE_5 IS NULL
;
COMMIT;
ADMS_CONFIG.PKG_ADMS_UTIL.WRITE_TO_AUDIT_LOG(        NSCHEMA, V_PROCESSID,'DATE BUILT RULES COMPLETED','FINISH',NULL , sysdate, null,ics_audit_id);
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ADMS_CONFIG.PKG_ADMS_UTIL.WRITE_TO_AUDIT_LOG(        NSCHEMA, V_PROCESSID,'YEAR BUILT CODE RULES STARTED','START',NULL , sysdate, null,ics_audit_id);
-- YEARBUILTCODE RULES
DBMS_RANDOM.SEED('ICS_SEED'); -- WE NEED TO CALL THE SEED TO ENSURE THE SAME DATES ARE GENERATED IF THIS SP IS RUN AGAIN IN FUTURE

UPDATE T_I_INFILL_DATE A SET (A.INFILL_VALUE_6, A.INFILL_VALUE_6_SRC) = 
(
  SELECT
    CASE 
        WHEN YEARBUILTCODE = 'A' THEN TO_DATE('18490101', 'YYYYMMDD')
        WHEN YEARBUILTCODE = 'B' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1850, 1875) ), 'YYYY')
        WHEN YEARBUILTCODE = 'C' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1876, 1917) ), 'YYYY')
        WHEN YEARBUILTCODE = 'D' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1918, 1944) ), 'YYYY')
        WHEN YEARBUILTCODE = 'E' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1945, 1969) ), 'YYYY')
        WHEN YEARBUILTCODE = 'F' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1970, 1979) ), 'YYYY')
        WHEN YEARBUILTCODE = 'G' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1980, 1989) ), 'YYYY')
        WHEN YEARBUILTCODE = 'H' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1990, 1999) ), 'YYYY')
        WHEN YEARBUILTCODE = 'I' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (2000, 2009) ), 'YYYY')
        WHEN YEARBUILTCODE = 'J' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (2010, 2014) ), 'YYYY')
       --   ELSE TO_DATE(RENOVATIONDATE, 'YYYYMMDD') --?
    END INFILL_VALUE_6, 'TW YEARBUILTCODE RULES' INFILL_VALUE_6_SRC
   FROM T_I_MAINS T1 
     LEFT JOIN WATERINF.T_I_MAINS_TWUL T2  ---THIS NEEDS TO COME FROM THE T_I_MAINS_TWUL TABLE
     ON T1.ICS_ASSET_ID = T2.ICS_ASSET_ID
     WHERE T1.DATE_INSTALL IS NULL 
     AND (T2.YEARBUILTCODE)IS NOT NULL -- NOTE THERE ARE CODES NOT INCLUDED E.G. K, Z generating nulls at the minute
      AND A.ICS_ID = T1.ICS_ASSET_ID
)
 WHERE A.INFILL_VALUE_6 IS NULL;
/*
SELECT YEARBUILTCODE FROM T_I_MAINS_TWUL
GROUP BY YEARBUILTCODE ORDER BY YEARBUILTCODE*/
COMMIT;
ADMS_CONFIG.PKG_ADMS_UTIL.WRITE_TO_AUDIT_LOG(        NSCHEMA, V_PROCESSID,'YEAR BUILT CODE RULES COMPLETED','FINISH',NULL , sysdate, null,ics_audit_id);
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ADMS_CONFIG.PKG_ADMS_UTIL.WRITE_TO_AUDIT_LOG(        NSCHEMA, V_PROCESSID,'MATERIAL RULES STARTED','START',NULL , sysdate, null,ics_audit_id);
--NOW DO THE THE MATERIAL RULES - NOTE THAMES HAVE EXTRA RULES IN THEIR CLEANUP02 SCRIPT
UPDATE T_I_INFILL_DATE A SET (A.INFILL_VALUE_7, A.INFILL_VALUE_7_SRC) = 
(  SELECT  
    CASE 
      WHEN MATERIAL = 'DI' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1965, 2014) ), 'YYYY')
      WHEN MATERIAL = 'AC' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1930, 1985) ), 'YYYY')
      WHEN MATERIAL = 'GRP' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1970, 2009) ), 'YYYY')
      WHEN MATERIAL = 'CN' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1955, 1995) ), 'YYYY')
      WHEN (MATERIAL  = 'UPC' Or MATERIAL = 'PVC') THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1955, 1995) ), 'YYYY')
      WHEN MATERIAL = 'ST' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1920, 2014) ), 'YYYY')
      WHEN MATERIAL = 'MDPE' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1981, 2009) ), 'YYYY')
      WHEN MATERIAL = 'HPPE' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1991, 2014) ), 'YYYY')
      WHEN MATERIAL = 'BP' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1981, 2009) ), 'YYYY')
      WHEN MATERIAL = 'SI' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1925, 1975) ), 'YYYY')
      WHEN MATERIAL = 'GI' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1930, 1970) ), 'YYYY')
      WHEN MATERIAL = 'CP' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1930, 2014) ), 'YYYY')
      WHEN MATERIAL = 'LD' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1840, 1970) ), 'YYYY')
      WHEN MATERIAL = 'MOPC' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1955, 1985) ), 'YYYY')
      WHEN MATERIAL = 'AK' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1981, 2009) ), 'YYYY')
      WHEN MATERIAL = 'CS' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1920, 2014) ), 'YYYY')
     
    END INFILL_VALUE_7, 'TW MATERIAL RULES' INFILL_VALUE_7_SRC
   FROM T_I_MAINS T1 
    -- LEFT JOIN WATERINF.T_I_MAINS_TWUL T2  ---THIS NEEDS TO COME FROM THE T_I_MAINS_TWUL TABLE
    -- ON T1.ICS_ASSET_ID = T2.ICS_ASSET_ID
     WHERE T1.DATE_INSTALL IS NULL 
     AND (T1.material)IS NOT NULL -- NOTE THERE ARE CODES NOT INCLUDED E.G. CI FG POL OTH BR HPP APC UNK generating nulls at the minute
      AND A.ICS_ID = T1.ICS_ASSET_ID
)
 WHERE A.INFILL_VALUE_7 IS NULL;
commit;
ADMS_CONFIG.PKG_ADMS_UTIL.WRITE_TO_AUDIT_LOG(        NSCHEMA, V_PROCESSID,'MATERIAL RULES COMPLETED','FINISH',NULL , sysdate, null,ics_audit_id);

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--HERE WE HAVE THE RULES FROM THE CLEANUP02 CODE WHICH WILL GO IN THE NO 3 POSITION
ADMS_CONFIG.PKG_ADMS_UTIL.WRITE_TO_AUDIT_LOG(        NSCHEMA, V_PROCESSID,'CLEANUP02 RULES STARTED','START',NULL , sysdate, null,ics_audit_id);
MERGE INTO 
 T_I_INFILL_DATE A
USING
     (
     SELECT
      CASE
        WHEN    EXTRACT(YEAR FROM DATE_INSTALL) < 1965  AND MATERIAL = 'DI' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1965, 2014) ), 'YYYY')
        WHEN  (EXTRACT(YEAR FROM DATE_INSTALL) < 1930 OR EXTRACT(YEAR FROM DATE_INSTALL) > 1985) AND MATERIAL = 'AC' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1930, 1985) ), 'YYYY')
        WHEN  (EXTRACT(YEAR FROM DATE_INSTALL) < 1970 OR EXTRACT(YEAR FROM DATE_INSTALL) > 2009) AND MATERIAL = 'GRP' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1970, 2009) ), 'YYYY')
        WHEN  (EXTRACT(YEAR FROM DATE_INSTALL) < 1955 OR EXTRACT(YEAR FROM DATE_INSTALL) > 1995) AND MATERIAL = 'CN' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1955, 1995) ), 'YYYY')
        WHEN  (EXTRACT(YEAR FROM DATE_INSTALL) < 1955 OR EXTRACT(YEAR FROM DATE_INSTALL) > 1995) AND (MATERIAL = 'UPC' OR MATERIAL = 'UPVC') THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1955, 1995) ), 'YYYY')
        WHEN  (EXTRACT(YEAR FROM DATE_INSTALL) < 1950 OR EXTRACT(YEAR FROM DATE_INSTALL) > 1990) AND MATERIAL = 'POL' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1950, 1990) ), 'YYYY')
        WHEN  (EXTRACT(YEAR FROM DATE_INSTALL) < 1920 OR EXTRACT(YEAR FROM DATE_INSTALL) > 2014) AND MATERIAL = 'ST' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1920, 2014) ), 'YYYY')
        WHEN  (EXTRACT(YEAR FROM DATE_INSTALL) < 1981 OR EXTRACT(YEAR FROM DATE_INSTALL) > 2009) AND MATERIAL = 'MDPE' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1981, 2009) ), 'YYYY')
        WHEN  (EXTRACT(YEAR FROM DATE_INSTALL) < 1991 OR EXTRACT(YEAR FROM DATE_INSTALL) > 2014) AND MATERIAL = 'HPPE' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1991, 2014) ), 'YYYY')
        WHEN  (EXTRACT(YEAR FROM DATE_INSTALL) < 1981 OR EXTRACT(YEAR FROM DATE_INSTALL) > 2009) AND MATERIAL = 'BP' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1981, 2009) ), 'YYYY')
        WHEN  (EXTRACT(YEAR FROM DATE_INSTALL) < 1925 OR EXTRACT(YEAR FROM DATE_INSTALL) > 1975) AND MATERIAL = 'SI' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1925, 1975) ), 'YYYY')
        WHEN  (EXTRACT(YEAR FROM DATE_INSTALL) < 1930 OR EXTRACT(YEAR FROM DATE_INSTALL) > 1970) AND MATERIAL = 'GI' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1930, 1970) ), 'YYYY')
        WHEN  (EXTRACT(YEAR FROM DATE_INSTALL) < 1930 OR EXTRACT(YEAR FROM DATE_INSTALL) > 2014) AND MATERIAL = 'CP' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1930, 2014) ), 'YYYY')
        WHEN  (EXTRACT(YEAR FROM DATE_INSTALL) < 1840 OR EXTRACT(YEAR FROM DATE_INSTALL) > 1970) AND MATERIAL = 'LD' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1840, 1970) ), 'YYYY')
        WHEN  (EXTRACT(YEAR FROM DATE_INSTALL) < 1955 OR EXTRACT(YEAR FROM DATE_INSTALL) > 1985) AND MATERIAL = 'MOPC' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1955, 1985) ), 'YYYY') 
        WHEN  (EXTRACT(YEAR FROM DATE_INSTALL) < 1981 OR EXTRACT(YEAR FROM DATE_INSTALL) > 2009) AND MATERIAL = 'AK' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1981, 2009) ), 'YYYY') 
        WHEN  (EXTRACT(YEAR FROM DATE_INSTALL) < 1920 OR EXTRACT(YEAR FROM DATE_INSTALL) > 2014) AND MATERIAL = 'CS' THEN TO_DATE(TRUNC (DBMS_RANDOM.VALUE (1920, 2014) ), 'YYYY') 
    END INFILL_VALUE_3, 'TW_RULES_CLEANUP02' INFILL_VALUE_3_SRC, ICS_ASSET_ID
     FROM T_I_MAINS
      
     ) DTINF
ON (A.ICS_ID = DTINF.ICS_ASSET_ID)
WHEN MATCHED THEN UPDATE SET
  A.INFILL_VALUE_3 = DTINF.INFILL_VALUE_3,
  A.INFILL_VALUE_3_SRC = DTINF.INFILL_VALUE_3_SRC
WHEN NOT MATCHED THEN INSERT
  (A.ICS_ID, A.INFILL_VALUE_3, A.INFILL_VALUE_3_SRC)
VALUES
  (DTINF.ICS_ASSET_ID,
  DTINF.INFILL_VALUE_3,
  DTINF.INFILL_VALUE_3_SRC 
  );


ADMS_CONFIG.PKG_ADMS_UTIL.WRITE_TO_AUDIT_LOG(        NSCHEMA, V_PROCESSID,'CLEANUP02 RULES COMPLETED','FINISH',NULL , sysdate, null,ics_audit_id);

----end of THAMES rules

/*
WITH CTE AS(
)
SELECT MATERIAL, COUNT(*) FROM CTE 
WHERE MAINS_INSTALL IS NULL
GROUP BY MATERIAL;
--TEST TO SEE WHAT HAS BEEN MISSED
CI
FG
POL
OTH
BR
HPP
APC
UNK*/
------------------------------------------------------------------------------------------------------------------------------------------------------------------------

----- HERE WE WILL ADD THE HISTORIC DI INSTALL INFILL performed by ICS AS SPECIFIED IN PHASE 3 - ONLY APPLIES TO METHOD 83 DI MAINS
----- THIS TAKES PRESIDENT SO FOR THE COALESCE WE NEED TO PLACE THIS AT NO 2 IN THE QUEUE AND LEAVE 1 FOR THE STATS INFILL
ADMS_CONFIG.PKG_ADMS_UTIL.WRITE_TO_AUDIT_LOG(        NSCHEMA, V_PROCESSID,'DI RULES STARTED','START',NULL , sysdate, null,ics_audit_id);
MERGE INTO 
 T_I_INFILL_DATE A
USING
     (
     SELECT
      H.Di_Install_Year, H.Di_Install_YeaR_SRC , I.ICS_ASSET_ID     
       FROM Waterinf_Stage.T_R_Historic_Date_Infill H
       INNER JOIN T_I_MAINS I
       ON I.CLIENT_UID = H.GISID
      
     ) HISTINFDI
ON (A.ICS_ID = HISTINFDI.ICS_ASSET_ID)
WHEN MATCHED THEN UPDATE SET
  A.INFILL_VALUE_2 = HISTINFDI.DI_INSTALL_YEAR,
  A.INFILL_VALUE_2_SRC = HISTINFDI.DI_INSTALL_YEAR_SRC
WHEN NOT MATCHED THEN INSERT
  (A.ICS_ID, A.INFILL_VALUE_2, A.INFILL_VALUE_2_SRC)
VALUES
  (HISTINFDI.ICS_ASSET_ID,
  HISTINFDI.DI_INSTALL_YEAR,
  HISTINFDI.DI_INSTALL_YEAR_SRC 
  );


COMMIT;
ADMS_CONFIG.PKG_ADMS_UTIL.WRITE_TO_AUDIT_LOG(        NSCHEMA, V_PROCESSID,'DI RULES COMPLETED','FINISH',NULL , sysdate, null,ics_audit_id);
------------------------------------------------------------------------------------------------------------------------------------------------------------------
DBMS_STATS.GATHER_TABLE_STATS(OWNNAME => NSCHEMA, TABNAME => 'T_I_INFILL_DATE', ESTIMATE_PERCENT=>100);

ADMS_CONFIG.PKG_ADMS_UTIL.WRITE_TO_AUDIT_LOG(        NSCHEMA, V_PROCESSID, 'FINISH', 'FINISH', NULL, SYSDATE, NULL,ics_audit_id);
Adms_Config.Pkg_Adms_Util.Write_To_Audit_Finish(Ics_Audit_Id,'SUCCESS',Null,Sysdate);
ADMS_CONFIG.PKG_ADMS_UTIL.WRITE_TO_AUDIT_VALIDATION(Ics_Audit_Id, 'SUCCESS', 'DATE INFILL POPULATED');

EXCEPTION
  WHEN E_MISSING THEN
    ROLLBACK;
    v_msg := 'MISSING DATABASE OBJECTS';
    ADMS_CONFIG.PKG_ADMS_UTIL.WRITE_TO_AUDIT_LOG(    NSCHEMA, V_PROCESSID, V_MODULE1, 'ERROR', V_MSG, SYSDATE, NULL,ics_audit_id);
    Adms_Config.Pkg_Adms_Util.Write_To_Audit_Finish(Ics_Audit_Id,'ERROR',Null,Sysdate);
    ADMS_CONFIG.PKG_ADMS_UTIL.WRITE_TO_AUDIT_VALIDATION(Ics_Audit_Id, 'ERROR', 'REQUIRED DATABASE OBJECTS MISSING');
  WHEN E_ARCHIVE THEN
    ROLLBACK;
    v_msg := 'ARCHIVING';
    ADMS_CONFIG.PKG_ADMS_UTIL.WRITE_TO_AUDIT_LOG(    NSCHEMA, V_PROCESSID, V_MODULE1, 'ERROR', V_MSG, SYSDATE, NULL,ics_audit_id);
    Adms_Config.Pkg_Adms_Util.Write_To_Audit_Finish(Ics_Audit_Id,'ERROR',Null,Sysdate);
    ADMS_CONFIG.PKG_ADMS_UTIL.WRITE_TO_AUDIT_VALIDATION(Ics_Audit_Id, 'ERROR', 'ERROR ARCHIVING DATA');
  WHEN OTHERS THEN
    ROLLBACK;
    v_msg := substr(sqlerrm, 1, 500);
    ADMS_CONFIG.PKG_ADMS_UTIL.WRITE_TO_AUDIT_LOG(    NSCHEMA, V_PROCESSID, V_MODULE1, 'ERROR', V_MSG, SYSDATE, NULL,ics_audit_id);
    Adms_Config.Pkg_Adms_Util.Write_To_Audit_Finish(Ics_Audit_Id,'ERROR',Null,Sysdate);
    ADMS_CONFIG.PKG_ADMS_UTIL.WRITE_TO_AUDIT_VALIDATION(Ics_Audit_Id, 'ERROR', v_msg);
end;